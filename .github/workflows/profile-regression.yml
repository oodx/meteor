name: Profile Regression Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-profiles:
    name: Test Profile - ${{ matrix.profile }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        profile: [default, enterprise, embedded, strict]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-target-${{ matrix.profile }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Display profile configuration
        env:
          METEOR_PROFILE: ${{ matrix.profile }}
        run: |
          echo "Testing with METEOR_PROFILE=${{ matrix.profile }}"
          cargo run --bin meteor-config || true

      - name: Build with ${{ matrix.profile }} profile
        env:
          METEOR_PROFILE: ${{ matrix.profile }}
        run: |
          cargo clean
          cargo build --verbose

      - name: Run all tests with ${{ matrix.profile }} profile
        env:
          METEOR_PROFILE: ${{ matrix.profile }}
        run: cargo test --verbose

      - name: Run namespace depth regression tests
        env:
          METEOR_PROFILE: ${{ matrix.profile }}
        run: cargo test --test test_namespace_depth_regression --verbose

      - name: Check formatting
        if: matrix.profile == 'default'
        run: cargo fmt -- --check

      - name: Run clippy
        if: matrix.profile == 'default'
        run: cargo clippy -- -D warnings

  validate-all-profiles:
    name: Validate All Profiles Pass
    runs-on: ubuntu-latest
    needs: test-profiles
    steps:
      - name: All profile tests passed
        run: echo "âœ… All profile regression tests passed successfully"