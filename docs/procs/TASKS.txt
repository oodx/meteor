# METEOR ENGINE TASK BOARD

## ðŸŽ¯ CURRENT FOCUS (2025-10-03)
- Roadmap: `docs/procs/ROADMAP.txt` â€” ME-1 âœ… COMPLETE â†’ ME-2 next.
- Architecture references: `docs/ref/architecture/ENGINE_ENHANCEMENT.md`, `docs/ref/planning/ENGINE_TASKS.txt`.
- **ME-1 Status**: âœ… DELIVERED (8/8 SP) - Workspace foundations complete, all 234 tests passing.
- **Next Phase**: ME-2 (Iterators & Cursor Guards, 7 SP) ready to start.

Legends: Status â€” ðŸ”µ Ready, ðŸŸ  In Progress, âšª Planned. Owner marked when a driver is assigned.

---

## ðŸ§± ME-1 â€” WORKSPACE FOUNDATIONS (8 SP)

| Ticket | SP | Status | Owner | Dependencies | Acceptance Snapshot |
|--------|----|--------|-------|--------------|---------------------|
| ENG-01 | 3 | âœ… Complete | - | None | Workspace struct wired into `MeteorEngine`; ordering, caches, scratch buffers stored per `(ctx, ns)`. |
| ENG-02 | 2 | âœ… Complete | - | ENG-01 | All mutation paths trigger cache invalidation; tests cover success & error flows. |
| ENG-03 | 1 | âœ… Complete | - | ENG-01 | Debug-only workspace dump behind `cfg(debug_assertions)` with snapshot test. |
| REGR-03 | 2 | âœ… Complete | - | ENG-01 | Namespace depth guard respects profile overrides; regression suite green in strict + relaxed modes. |

**ENG-01 (3 SP)** âœ… **COMPLETED** (2025-10-03)
- âœ… Delivered `EngineWorkspace` owning ordering tables, query caches, scratch slots keyed by `(context, namespace)`.
- âœ… Integrated with `MeteorEngine` lifecycle (init, clone, reset) without leaking through public API.
- âœ… Added 12 unit tests for workspace creation, cache invalidation, and scratch-slot reservation.
- âœ… Implementation: `src/lib/types/meteor/workspace.rs` (202 LOC implementation + 206 LOC tests)
- âœ… Test results: All 176 tests passing (105 lib + 71 integration, 100% pass rate)
- âœ… **Fix**: Added `EngineWorkspace::clear()` to properly align workspace with `StorageData` during `clear_storage()` and `reset_all()` operations
- âœ… Added regression tests: `tests/test_workspace_storage_alignment.rs` (3 tests validating workspace-storage alignment)

**ENG-02 (2 SP)** âœ… **COMPLETED** (2025-10-03)
- âœ… Extended all mutation methods (`store_token`, `store_token_at`, `set`, `delete`) to update workspace key_order
- âœ… Implemented scope-aware invalidation (key/namespace/context/storage levels)
- âœ… **Fixed**: Added `invalidate_caches()` calls on all insert/update/delete paths to prevent stale query cache
- âœ… Added `workspace-instrumentation` feature flag with cache hit/miss tracking
- âœ… Instrumentation includes: `cache_hits`, `cache_misses`, `cache_hit_ratio()` per namespace
- âœ… Counters automatically reset on cache invalidation
- âœ… Test results: 24 tests (14 mutation + 10 cache invalidation), all passing
- âœ… **China's Review**: Production Ready - comprehensive mutation hooks, solid invalidation logic
- âœ… Files modified: `Cargo.toml`, `workspace.rs` (+70 LOC), `engine.rs` (4 invalidation calls added), test suite (+390 LOC)

**ENG-03 (1 SP)** âœ… **COMPLETED** (2025-10-03)
- âœ… `workspace_status()` method already implemented in ENG-01 (returns `WorkspaceStatus` struct)
- âœ… Added comprehensive documentation to `ENGINE_ENHANCEMENT.md` with:
  - Full `WorkspaceStatus` struct definition with field descriptions
  - Complete usage example with debug assertions and feature flag handling
  - 5 guard rails documented (debug-only, read-only, feature flags, atomic invalidation, encapsulation)
  - Cache invalidation semantics for all mutation paths
  - Performance monitoring instructions for ME-2 testing
- âœ… Documentation includes workspace inspection section (~80 lines) with guard rails and examples
- âœ… All 203 tests passing (no changes to implementation, documentation-only ticket)

**REGR-03 (2 SP)** âœ… **COMPLETED** (2025-10-03)
- âœ… Created comprehensive regression test suite: `tests/test_namespace_depth_regression.rs` (13 tests, 298 LOC)
- âœ… Profile-aware tests validate all 4 profiles: default, enterprise, embedded, strict
- âœ… Test coverage includes:
  - Clear/warning/error threshold validation
  - Progressive depth validation (1-10 levels)
  - Profile-specific boundary tests (cfg attributes)
  - Edge case testing (max_depth - 1)
  - Real-world namespace pattern validation
  - Integration with MeteorEngine
- âœ… Fixed cfg(meteor_default) warning by adding meteor_default to build.rs check-cfg declarations
- âœ… Created GitHub Actions CI workflow: `.github/workflows/profile-regression.yml`
  - Matrix testing across all 4 profiles
  - Automatic rebuild with METEOR_PROFILE env var
  - Profile configuration display for debugging
  - Lint/clippy checks on default profile
- âœ… Comprehensive testing guide: `docs/PROFILE_TESTING.md` (~300 lines)
  - Local testing instructions with examples
  - CI simulation scripts
  - Profile-aware test writing patterns
  - Troubleshooting guide
  - Best practices for downstream consumers
- âœ… All 13 regression tests pass in default profile
- âœ… Namespace depth validation respects compile-time profile overrides via NAMESPACE_ERROR_DEPTH/NAMESPACE_WARNING_DEPTH constants

---

## ðŸ”„ ME-2 â€” ITERATORS & CURSOR GUARDS (7 SP)

| Ticket | SP | Status | Owner | Dependencies | Acceptance Snapshot |
|--------|----|--------|-------|--------------|---------------------|
| ENG-10 | 2 | âœ… Complete | - | ME-1 | `iter_entries`, `contexts_iter`, `namespaces_iter` cover hybrid storage with ordering hints. |
| ENG-11 | 2 | âšª Planned | TBA | ENG-10 | Namespace view struct exposes counts/default markers; CLI list uses it behind feature flag. |
| ENG-12 | 3 | âšª Planned | TBA | ENG-10 | `CursorGuard` restores cursor on panic/Error; REPL smoke proves guard safety. |

**ENG-10 (2 SP)** âœ… **COMPLETED** (2025-10-03)
- âœ… Implemented `contexts_iter()` - iterator over sorted context names
- âœ… Implemented `namespaces_iter(context)` - iterator over sorted namespace names within context
- âœ… Implemented `iter_entries()` - iterator over all entries with workspace ordering
  - Returns `EntriesIterator<'_>` yielding `(String, String, String, String)` tuples
  - Leverages workspace `key_order` for deterministic insertion-order iteration
  - Falls back to storage keys when workspace unavailable (hybrid storage support)
  - Explicit lifetime annotation (`'_`) for clear borrowing semantics
- âœ… Added 17 comprehensive unit tests (`tests/test_engine_iterators.rs`, 249 LOC):
  - Context/namespace iterator edge cases (empty, single, multiple)
  - Entry iteration across contexts/namespaces
  - Workspace ordering preservation (insertion order, NOT alphabetical)
  - Post-deletion consistency
  - Update ordering stability
- âœ… Added iteration instrumentation (feature-gated):
  - `iteration_count`, `keys_iterated` per namespace
  - `total_iterations`, `total_keys_iterated`, `avg_keys_per_iteration` in WorkspaceStatus
  - `record_iteration()`, `avg_keys_per_iteration()` methods
- âœ… Comprehensive documentation in `ENGINE_ENHANCEMENT.md` (~180 lines):
  - API surface with examples
  - Implementation details and algorithm
  - Workspace integration strategy
  - Performance characteristics (time/space complexity)
  - Lifetime and borrowing semantics
  - Test coverage summary
- âœ… All 252 tests passing (234 existing + 17 new + 1 doc test)
- âœ… **Bug Fix** (2025-10-03): Fixed instrumentation bug where `record_iteration()` was never called
  - Changed counters from `u64` to `Cell<u64>` for interior mutability
  - `EntriesIterator` now calls `workspace.record_iteration()` when using `key_order`
  - Implemented manual `Clone` for `NamespaceWorkspace` to handle `Cell` fields
  - Added 6 instrumentation tests (`tests/test_iteration_instrumentation.rs`)
  - Iteration metrics now persist across cache invalidations (lifetime statistics)

**ENG-11 (2 SP)**
- Introduce `NamespaceView` with ordering hints, default value flags, entry counts.
- Update CLI `list` (feature flag) to consume view and write formatting spec.

**ENG-12 (3 SP)**
- Provide `engine.cursor()` accessor plus RAII guard; ensure parsers adopt guard where necessary.
- Add regression tests for cursor restoration after control-command errors and panics (using test hooks).

---

## ðŸŒ  ME-3 â€” METEOR AGGREGATION & VIRTUALIZATION (18 SP)

| Ticket | SP | Status | Owner | Dependencies | Acceptance Snapshot |
|--------|----|--------|-------|--------------|---------------------|
| ENG-20 | 3 | âšª Planned | TBA | ME-2 | `meteors()` / `meteor_for()` produce grouped meteor views consumed by CLI/REPL. |
| ENG-21 | 2 | âšª Planned | TBA | ENG-20 | Section/part emission honours ordering metadata; golden tests updated. |
| ENG-22 | 2 | âšª Planned | TBA | ENG-20 | `export_namespace` supports text+JSON, captures metadata checksum. |
| ENG-23 | 2 | âšª Planned | TBA | ENG-22 | `import_namespace` validates metadata, enforces invariant, reports diff. |
| ENG-24 | 2 | âšª Planned | TBA | ENG-20 | `scratch_slot` API isolates workspace scratch areas with lifetime guard. |
| ENG-40 | 3 | âšª Planned | TBA | ENG-20 | Meteor constructors enforce single `(context, namespace)`; legacy shims guarded. |
| ENG-41 | 2 | âšª Planned | TBA | ENG-20 | Parsers align with grouped meteors; compatibility flag retains substring find. |
| ENG-42 | 1 | âšª Planned | TBA | ME-2 | Central smart-split shared by parsers/CLI; regression covers quoting edge cases. |
| CLI-05 | 1 | âšª Planned | TBA | ENG-20, ENG-22 | CLI `parse` routed through meteor views with text/json parity tests. |
| REPL-05 | 1 | âšª Planned | TBA | ENG-20, ENG-24 | REPL `meteor/list/history` commands use new APIs; scripted test added. |
| QA-10  | 1 | âšª Planned | TBA | ME-3 | Zero-warning baseline kept; CI guard fails on new warnings. |

**ENG-20 (3 SP)**
- Create `MeteorView` struct and iterators grouping storage output by `(context, namespace)`.
- Provide integration tests covering hybrid storage and empty namespaces; document API.

**ENG-21 (2 SP)**
- Ensure workspace ordering hints drive serialized section/part ordering; update fixtures.

**ENG-22 (2 SP)** & **ENG-23 (2 SP)**
- Build export/import helpers with configurable format adapters, metadata manifests, and validation errors.
- Add sample fixtures (text + JSON) and round-trip integration tests.

**ENG-24 (2 SP)**
- Implement workspace-backed scratch slots with lifetime-managed handles; wire into REPL scratch workflow plan.

**ENG-40 (3 SP)**
- Harden meteor constructors, update `Meteor` docs, include migration notes for legacy multi-context meteors.

**ENG-41 (2 SP)**
- Align parser flows with aggregated meteor surfaces; toggle legacy substring search via config.

**ENG-42 (1 SP)**
- Centralize smart-split logic; add regression coverage for escaped quotes and ctl tokens.

**CLI-05 (1 SP)** & **REPL-05 (1 SP)**
- Move CLI/REPL rendering onto meteor views; verify parity with legacy logs via smoke tests.

**QA-10 (1 SP)**
- Ensure compilation warnings remain zero; extend CI script to fail on warning introduction.

---

## ðŸ“Œ TRACKERS & FOLLOW-UPS
- **Testing Expansion**: TEST-01..03, REGR-01 scheduled once ME-3 APIs stabilize.
- **Documentation**: ENG-90..92 queued post ME-3 for architecture and workflow updates.
- **Integration**: ProntoDB contract review after aggregated APIs land.

Last Updated: 2025-10-03
